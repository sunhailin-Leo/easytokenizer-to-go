name: Test
on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!**.md'
  pull_request:
    paths:
      - '**'
      - '!**.md'
jobs:
  Build:
    strategy:
      matrix:
        go-version: [1.18.x, 1.19.x, 1.20.x, 1.21.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.26.x'
      - name: Check cmake
        run: cmake --version
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      - name: Fetch Repository
        uses: actions/checkout@v3
      - name: Build And Install C++ Library
        run: |
          cmake --version
          cd ${{github.workspace}}
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
          ls
      - name: Run Test
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 15
          command: |
            ls /usr/local/lib | grep libtokenizer
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
            go test ./... -v -race